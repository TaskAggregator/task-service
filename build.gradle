plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.0'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'org.hibernate.orm' version '6.1.5.Final'
	id 'com.google.cloud.tools.jib' version '3.2.0'
}

group = 'ru.novoselov'
version = '0.0.1'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://artifactory-oss.prod.netflix.net/artifactory/maven-oss-candidates' }
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	springVersion = "3.0.2"
	springCloudVersion = "4.0.0"
	liquibaseVersion = "4.18.0"
	lombokVersion = "1.18.24"
	jacksonVersion = "2.14.0"
	postgresVersion = "42.5.1"
	mapStructVersion  = "1.5.3.Final"
	set('springCloudDependenciesVersion', "2022.0.0-RC2")
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-actuator:$springVersion"
	implementation "org.springframework.boot:spring-boot-starter-data-jpa:$springVersion"
	implementation "org.springframework.boot:spring-boot-starter-web:$springVersion"
	implementation "org.springframework.kafka:spring-kafka:$springVersion"
	implementation "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:$springCloudVersion"
	implementation "org.springframework.cloud:spring-cloud-stream:$springCloudVersion"
	implementation "org.springframework.cloud:spring-cloud-stream-binder-kafka:$springCloudVersion"
	implementation "org.liquibase:liquibase-core:$liquibaseVersion"
	implementation "org.projectlombok:lombok:$lombokVersion"
	implementation "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
	implementation "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
	implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion"
	implementation "org.mapstruct:mapstruct:$mapStructVersion"
	compileOnly "org.projectlombok:lombok:$lombokVersion"
	runtimeOnly "org.postgresql:postgresql:$postgresVersion"
	annotationProcessor "org.projectlombok:lombok:$lombokVersion"
	annotationProcessor "org.mapstruct:mapstruct-processor:$mapStructVersion"
	testImplementation "org.springframework.boot:spring-boot-starter-test:$springVersion"
	testImplementation "org.springframework.kafka:spring-kafka-test:$springVersion"
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudDependenciesVersion}"
	}
}

jib {
	from {
		image dockerImage
	}

	to {
		image "docker.io/caspaze/${project.name}:${project.version}"

		auth {
			username System.getenv('DOCKER_USERNAME')
			password System.getenv('DOCKER_PASSWORD')
		}
	}
}
